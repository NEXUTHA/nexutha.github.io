{"version":3,"file":"main-legacy-B5OlVDqb.js","sources":["../../../src/ts/translations.ts","../../../src/ts/main.ts"],"sourcesContent":["// NEXUTHA - Translation Data\n\nimport type { TranslationData } from './types';\n\nexport const translations: TranslationData = {\n  ja: {\n    nav: {\n      home: 'ホーム',\n      about: '概要',\n      services: 'サービス',\n      contact: 'お問い合わせ'\n    },\n    hero: {\n      title: 'AI・音楽・テクノロジーの融合',\n      subtitle: '創造的技術で未来を形作る',\n      cta: '今すぐ始める'\n    },\n    stats: {\n      projects: 'プロジェクト',\n      clients: 'クライアント', \n      support: 'サポート時間'\n    },\n    about: {\n      title: 'NEXUTHAについて',\n      description1: 'NEXUTHAは音楽、AI、自動化技術を融合させた革新的なソリューションを提供する創造的技術企業です。',\n      description2: 'プロンプトエンジニアリング、音楽制作、レーザーアートを通じて、クリエイターと技術の架け橋となります。'\n    },\n    features: {\n      ai: {\n        title: 'AI技術',\n        description: '最先端のAI技術を活用したソリューション'\n      },\n      music: {\n        title: '音楽制作',\n        description: 'プロフェッショナルな音楽制作サービス'\n      },\n      automation: {\n        title: '自動化',\n        description: '効率的な業務自動化システム'\n      }\n    },\n    services: {\n      title: 'サービス',\n      prompt: {\n        title: 'プロンプトエンジニアリング',\n        description: 'AIモデルとの効果的なコミュニケーションを実現'\n      },\n      music: {\n        title: '音楽制作',\n        description: 'オリジナル楽曲制作とサウンドデザイン'\n      },\n      laser: {\n        title: 'レーザーアート',\n        description: '幻想的なレーザー映像と空間演出'\n      }\n    },\n    contact: {\n      title: 'お問い合わせ',\n      description: 'プロジェクトのご相談やお見積もりは、AIアシスタントまでお気軽にお声がけください。'\n    },\n    chatbot: {\n      title: 'AIアシスタント',\n      welcome: 'こんにちは！NEXUTHAのAIアシスタントです。何かお手伝いできることはありますか？',\n      placeholder: 'メッセージを入力...',\n      thinking: '考え中...',\n      error: '申し訳ありません。エラーが発生しました。もう一度お試しください。'\n    },\n    footer: {\n      privacy: 'プライバシーポリシー',\n      terms: '利用規約',\n      rights: 'All rights reserved.'\n    }\n  },\n  en: {\n    nav: {\n      home: 'Home',\n      about: 'About',\n      services: 'Services',\n      contact: 'Contact'\n    },\n    hero: {\n      title: 'Fusion of AI, Music & Technology',\n      subtitle: 'Shaping the future with creative technology',\n      cta: 'Get Started'\n    },\n    stats: {\n      projects: 'Projects',\n      clients: 'Clients',\n      support: 'Support Hours'\n    },\n    about: {\n      title: 'About NEXUTHA',\n      description1: 'NEXUTHA is a creative technology company that provides innovative solutions by fusing music, AI, and automation technologies.',\n      description2: 'We serve as a bridge between creators and technology through prompt engineering, music production, and laser art.'\n    },\n    features: {\n      ai: {\n        title: 'AI Technology',\n        description: 'Solutions utilizing cutting-edge AI technology'\n      },\n      music: {\n        title: 'Music Production',\n        description: 'Professional music production services'\n      },\n      automation: {\n        title: 'Automation',\n        description: 'Efficient business automation systems'\n      }\n    },\n    services: {\n      title: 'Services',\n      prompt: {\n        title: 'Prompt Engineering',\n        description: 'Enabling effective communication with AI models'\n      },\n      music: {\n        title: 'Music Production',\n        description: 'Original music composition and sound design'\n      },\n      laser: {\n        title: 'Laser Art',\n        description: 'Fantastic laser visuals and spatial production'\n      }\n    },\n    contact: {\n      title: 'Contact',\n      description: 'For project consultation or estimates, please feel free to contact our AI assistant.'\n    },\n    chatbot: {\n      title: 'AI Assistant',\n      welcome: 'Hello! I\\'m NEXUTHA\\'s AI assistant. How can I help you today?',\n      placeholder: 'Type your message...',\n      thinking: 'Thinking...',\n      error: 'Sorry, an error occurred. Please try again.'\n    },\n    footer: {\n      privacy: 'Privacy Policy',\n      terms: 'Terms of Service',\n      rights: 'All rights reserved.'\n    }\n  }\n};","// NEXUTHA - Main TypeScript Application\n\nimport type { \n  Language, \n  Theme, \n  AppState, \n  ChatMessage, \n  StatItem, \n  HTMLElementWithDataset,\n  AppConfig \n} from './types';\n\nimport { translations } from './translations';\nimport { \n  storage, \n  throttle, \n  debounce, \n  generateId, \n  animateCounter, \n  scrollToElement, \n  isInViewport, \n  createIntersectionObserver,\n  getBrowserLanguage,\n  getDeviceType,\n  prefersReducedMotion,\n  EventEmitter,\n  errorLogger\n} from './utils';\n\n// Application Configuration\nconst CONFIG: AppConfig = {\n  version: '2.0.0',\n  environment: process.env.NODE_ENV as 'development' | 'production',\n  api: {\n    baseUrl: process.env.API_BASE_URL || 'https://api.nexutha.com',\n    timeout: 10000\n  },\n  features: {\n    analytics: true,\n    chatbot: true,\n    serviceWorker: true,\n    animations: !prefersReducedMotion()\n  },\n  performance: {\n    enableLazyLoading: true,\n    enableImageOptimization: true,\n    enableCodeSplitting: true\n  },\n  seo: {\n    enableStructuredData: true,\n    enableMetaGeneration: true,\n    enableSitemap: true\n  }\n};\n\n// Application State\nclass NEXUTHAApp extends EventEmitter {\n  private state: AppState = {\n    language: getBrowserLanguage(),\n    theme: storage.get<Theme>('nexutha_theme', 'dark'),\n    navigation: {\n      activeSection: 'home',\n      isMenuOpen: false\n    },\n    chatbot: {\n      isOpen: false,\n      messages: [],\n      isTyping: false,\n      conversationHistory: []\n    },\n    isLoading: true,\n    visitorCount: 0\n  };\n\n  private elements: { [key: string]: HTMLElement | null } = {};\n  private observers: IntersectionObserver[] = [];\n  private statItems: StatItem[] = [];\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  private async init(): Promise<void> {\n    try {\n      // Performance marking\n      performance.mark('app-init-start');\n\n      // Initialize DOM elements\n      this.initializeElements();\n\n      // Setup event listeners\n      this.setupEventListeners();\n\n      // Initialize features\n      await this.initializeFeatures();\n\n      // Apply initial state\n      this.applyInitialState();\n\n      // Setup intersection observers\n      this.setupIntersectionObservers();\n\n      // Initialize analytics\n      this.initializeAnalytics();\n\n      // Mark app as loaded\n      this.setState({ isLoading: false });\n\n      // Performance measurement\n      performance.mark('app-init-end');\n      const initDuration = performance.measure('app-init-duration', 'app-init-start', 'app-init-end');\n      \n      console.log(`NEXUTHA App initialized in ${initDuration}ms`);\n\n      // Emit ready event\n      this.emit('app:ready', { duration: initDuration });\n\n    } catch (error) {\n      this.handleError(error, 'App initialization failed');\n    }\n  }\n\n  private initializeElements(): void {\n    const elementIds = [\n      'loadingScreen',\n      'progressBar',\n      'navigation',\n      'navMenu',\n      'navToggle',\n      'themeToggle',\n      'langToggle',\n      'heroBackground',\n      'heroStats',\n      'ctaButton',\n      'chatbotContainer',\n      'chatbotToggle',\n      'chatbotWindow',\n      'chatbotMessages',\n      'chatbotInput',\n      'chatbotSend',\n      'chatbotClose'\n    ];\n\n    elementIds.forEach(id => {\n      this.elements[id] = document.getElementById(id);\n    });\n\n    // Validate critical elements\n    const criticalElements = ['navigation', 'themeToggle', 'langToggle'];\n    criticalElements.forEach(id => {\n      if (!this.elements[id]) {\n        throw new Error(`Critical element '${id}' not found`);\n      }\n    });\n  }\n\n  private setupEventListeners(): void {\n    // Navigation toggle\n    this.elements.navToggle?.addEventListener('click', () => {\n      this.toggleNavigation();\n    });\n\n    // Theme toggle\n    this.elements.themeToggle?.addEventListener('click', () => {\n      this.toggleTheme();\n    });\n\n    // Language toggle\n    this.elements.langToggle?.addEventListener('click', () => {\n      this.toggleLanguage();\n    });\n\n    // Navigation links\n    const navLinks = document.querySelectorAll('.nav-link');\n    navLinks.forEach(link => {\n      link.addEventListener('click', (e) => {\n        e.preventDefault();\n        const target = link.getAttribute('href')?.substring(1) || 'home';\n        this.navigateToSection(target);\n      });\n    });\n\n    // CTA Button\n    this.elements.ctaButton?.addEventListener('click', () => {\n      this.openChatbot();\n    });\n\n    // Chatbot controls\n    this.elements.chatbotToggle?.addEventListener('click', () => {\n      this.toggleChatbot();\n    });\n\n    this.elements.chatbotClose?.addEventListener('click', () => {\n      this.closeChatbot();\n    });\n\n    this.elements.chatbotSend?.addEventListener('click', () => {\n      this.sendMessage();\n    });\n\n    this.elements.chatbotInput?.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        this.sendMessage();\n      }\n    });\n\n    // Scroll events\n    const throttledScrollHandler = throttle(this.handleScroll.bind(this), 16);\n    window.addEventListener('scroll', throttledScrollHandler);\n\n    // Resize events\n    const debouncedResizeHandler = debounce(this.handleResize.bind(this), 250);\n    window.addEventListener('resize', debouncedResizeHandler);\n\n    // Keyboard navigation\n    document.addEventListener('keydown', this.handleKeyDown.bind(this));\n\n    // Visibility change (for performance optimization)\n    document.addEventListener('visibilitychange', this.handleVisibilityChange.bind(this));\n\n    // Error handling\n    window.addEventListener('error', this.handleWindowError.bind(this));\n    window.addEventListener('unhandledrejection', this.handleUnhandledRejection.bind(this));\n  }\n\n  private async initializeFeatures(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    // Initialize chatbot\n    if (CONFIG.features.chatbot) {\n      promises.push(this.initializeChatbot());\n    }\n\n    // Initialize service worker\n    if (CONFIG.features.serviceWorker && 'serviceWorker' in navigator) {\n      promises.push(this.initializeServiceWorker());\n    }\n\n    // Initialize animations\n    if (CONFIG.features.animations) {\n      promises.push(this.initializeAnimations());\n    }\n\n    await Promise.all(promises);\n  }\n\n  private applyInitialState(): void {\n    // Apply theme\n    this.applyTheme(this.state.theme);\n\n    // Apply language\n    this.applyLanguage(this.state.language);\n\n    // Hide loading screen\n    setTimeout(() => {\n      const loadingScreen = this.elements.loadingScreen;\n      if (loadingScreen) {\n        loadingScreen.classList.add('hide');\n        setTimeout(() => {\n          loadingScreen.style.display = 'none';\n        }, 300);\n      }\n    }, 1000);\n\n    // Initialize stats counter\n    this.initializeStatsCounter();\n  }\n\n  private setupIntersectionObservers(): void {\n    // Section observer for navigation\n    const sectionObserver = createIntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const sectionId = entry.target.id;\n          this.setActiveSection(sectionId);\n        }\n      });\n    }, { threshold: 0.5 });\n\n    // Observe all sections\n    const sections = document.querySelectorAll('section[id]');\n    sections.forEach(section => {\n      sectionObserver.observe(section);\n    });\n\n    this.observers.push(sectionObserver);\n\n    // Animation observer\n    if (CONFIG.features.animations) {\n      const animationObserver = createIntersectionObserver((entries) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            entry.target.classList.add('animate');\n            animationObserver.unobserve(entry.target);\n          }\n        });\n      }, { threshold: 0.1, rootMargin: '0px 0px -50px 0px' });\n\n      const animatedElements = document.querySelectorAll('.animate-on-scroll');\n      animatedElements.forEach(element => {\n        animationObserver.observe(element);\n      });\n\n      this.observers.push(animationObserver);\n    }\n  }\n\n  private initializeAnalytics(): void {\n    if (!CONFIG.features.analytics) return;\n\n    // Initialize Google Analytics\n    const gtag = (window as any).gtag;\n    if (gtag) {\n      gtag('config', 'GA_TRACKING_ID', {\n        page_title: document.title,\n        page_location: window.location.href,\n        custom_map: {\n          custom_dimension_1: 'device_type',\n          custom_dimension_2: 'language'\n        }\n      });\n\n      // Send custom dimensions\n      gtag('event', 'page_view', {\n        device_type: getDeviceType(),\n        language: this.state.language\n      });\n    }\n\n    // Track visitor count (simulated)\n    const visitorCount = storage.get('nexutha_visitor_count', 0);\n    storage.set('nexutha_visitor_count', visitorCount + 1);\n    this.setState({ visitorCount: visitorCount + 1 });\n  }\n\n  private async initializeChatbot(): Promise<void> {\n    // Initialize chatbot with welcome message\n    const welcomeMessage: ChatMessage = {\n      id: generateId('msg_'),\n      content: translations[this.state.language].chatbot.welcome,\n      role: 'assistant',\n      timestamp: new Date()\n    };\n\n    this.setState({\n      chatbot: {\n        ...this.state.chatbot,\n        messages: [welcomeMessage]\n      }\n    });\n\n    this.updateChatbotUI();\n  }\n\n  private async initializeServiceWorker(): Promise<void> {\n    try {\n      const registration = await navigator.serviceWorker.register('/sw.js');\n      console.log('Service Worker registered:', registration);\n    } catch (error) {\n      console.warn('Service Worker registration failed:', error);\n    }\n  }\n\n  private async initializeAnimations(): Promise<void> {\n    // Initialize particle background\n    this.initializeParticleBackground();\n\n    // Initialize scroll-based animations\n    this.initializeScrollAnimations();\n  }\n\n  private initializeStatsCounter(): void {\n    const statsElements = document.querySelectorAll('.stat-number[data-count]');\n    \n    statsElements.forEach(element => {\n      const target = parseInt((element as HTMLElementWithDataset).dataset.count || '0');\n      const statItem: StatItem = {\n        element: element as HTMLElement,\n        target,\n        current: 0,\n        increment: target / 100\n      };\n      this.statItems.push(statItem);\n    });\n  }\n\n  private startStatsAnimation(): void {\n    this.statItems.forEach(item => {\n      animateCounter(item.element, item.target, 2000);\n    });\n  }\n\n  private initializeParticleBackground(): void {\n    const heroBackground = this.elements.heroBackground;\n    if (!heroBackground) return;\n\n    // Create canvas for particles\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0';\n    canvas.style.left = '0';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.opacity = '0.6';\n\n    heroBackground.appendChild(canvas);\n\n    // Particle system\n    const particles: Array<{\n      x: number;\n      y: number;\n      vx: number;\n      vy: number;\n      size: number;\n      opacity: number;\n    }> = [];\n\n    const resizeCanvas = () => {\n      canvas.width = heroBackground.offsetWidth;\n      canvas.height = heroBackground.offsetHeight;\n    };\n\n    const createParticle = () => ({\n      x: Math.random() * canvas.width,\n      y: Math.random() * canvas.height,\n      vx: (Math.random() - 0.5) * 0.5,\n      vy: (Math.random() - 0.5) * 0.5,\n      size: Math.random() * 2 + 1,\n      opacity: Math.random() * 0.5 + 0.2\n    });\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw particles\n      particles.forEach(particle => {\n        particle.x += particle.vx;\n        particle.y += particle.vy;\n\n        // Wrap around edges\n        if (particle.x < 0) particle.x = canvas.width;\n        if (particle.x > canvas.width) particle.x = 0;\n        if (particle.y < 0) particle.y = canvas.height;\n        if (particle.y > canvas.height) particle.y = 0;\n\n        // Draw particle\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(99, 102, 241, ${particle.opacity})`;\n        ctx.fill();\n      });\n\n      // Draw connections\n      particles.forEach((particle, i) => {\n        particles.slice(i + 1).forEach(otherParticle => {\n          const distance = Math.sqrt(\n            Math.pow(particle.x - otherParticle.x, 2) +\n            Math.pow(particle.y - otherParticle.y, 2)\n          );\n\n          if (distance < 100) {\n            ctx.beginPath();\n            ctx.moveTo(particle.x, particle.y);\n            ctx.lineTo(otherParticle.x, otherParticle.y);\n            ctx.strokeStyle = `rgba(99, 102, 241, ${0.1 * (1 - distance / 100)})`;\n            ctx.lineWidth = 1;\n            ctx.stroke();\n          }\n        });\n      });\n\n      if (!document.hidden) {\n        requestAnimationFrame(animate);\n      }\n    };\n\n    // Initialize particles\n    for (let i = 0; i < 50; i++) {\n      particles.push(createParticle());\n    }\n\n    resizeCanvas();\n    animate();\n\n    // Handle resize\n    window.addEventListener('resize', debounce(resizeCanvas, 250));\n  }\n\n  private initializeScrollAnimations(): void {\n    // Progress bar\n    const updateProgressBar = throttle(() => {\n      const progressBar = this.elements.progressBar;\n      if (!progressBar) return;\n\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const documentHeight = document.documentElement.scrollHeight - window.innerHeight;\n      const progress = (scrollTop / documentHeight) * 100;\n\n      progressBar.style.width = `${Math.min(progress, 100)}%`;\n    }, 16);\n\n    window.addEventListener('scroll', updateProgressBar);\n  }\n\n  // Event Handlers\n  private handleScroll(): void {\n    // Update navigation background opacity\n    const navigation = this.elements.navigation;\n    if (navigation) {\n      const opacity = Math.min(window.pageYOffset / 100, 1);\n      navigation.style.background = `rgba(15, 23, 42, ${0.95 * opacity})`;\n    }\n\n    // Trigger stats animation when visible\n    const heroStats = this.elements.heroStats;\n    if (heroStats && isInViewport(heroStats) && this.statItems.length > 0 && this.statItems[0].current === 0) {\n      this.startStatsAnimation();\n    }\n  }\n\n  private handleResize(): void {\n    // Close mobile menu on resize\n    if (window.innerWidth > 768 && this.state.navigation.isMenuOpen) {\n      this.setState({\n        navigation: {\n          ...this.state.navigation,\n          isMenuOpen: false\n        }\n      });\n      this.updateNavigationUI();\n    }\n  }\n\n  private handleKeyDown(e: KeyboardEvent): void {\n    // ESC key handlers\n    if (e.key === 'Escape') {\n      if (this.state.chatbot.isOpen) {\n        this.closeChatbot();\n      }\n      if (this.state.navigation.isMenuOpen) {\n        this.toggleNavigation();\n      }\n    }\n  }\n\n  private handleVisibilityChange(): void {\n    if (document.hidden) {\n      // Page is hidden - pause animations, reduce activity\n      console.log('Page hidden - reducing activity');\n    } else {\n      // Page is visible - resume normal activity\n      console.log('Page visible - resuming activity');\n    }\n  }\n\n  private handleWindowError(event: ErrorEvent): void {\n    this.handleError(new Error(event.message), 'Window error', {\n      filename: event.filename,\n      lineno: event.lineno,\n      colno: event.colno\n    });\n  }\n\n  private handleUnhandledRejection(event: PromiseRejectionEvent): void {\n    this.handleError(event.reason, 'Unhandled promise rejection');\n  }\n\n  private handleError(error: Error, context: string, metadata?: any): void {\n    errorLogger.log({\n      timestamp: new Date(),\n      level: 'error',\n      message: `${context}: ${error.message}`,\n      stack: error.stack,\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n      ...metadata\n    });\n  }\n\n  // State Management\n  private setState(newState: Partial<AppState>): void {\n    this.state = { ...this.state, ...newState };\n    this.emit('state:change', this.state);\n  }\n\n  // Theme Management\n  private toggleTheme(): void {\n    const newTheme: Theme = this.state.theme === 'dark' ? 'light' : 'dark';\n    this.setState({ theme: newTheme });\n    this.applyTheme(newTheme);\n    storage.set('nexutha_theme', newTheme);\n    this.emit('app:themeChange', { theme: newTheme });\n  }\n\n  private applyTheme(theme: Theme): void {\n    document.documentElement.setAttribute('data-theme', theme);\n    \n    const themeToggle = this.elements.themeToggle;\n    if (themeToggle) {\n      const icon = themeToggle.querySelector('.theme-icon');\n      if (icon) {\n        icon.textContent = theme === 'dark' ? '☀️' : '🌙';\n      }\n    }\n  }\n\n  // Language Management\n  private toggleLanguage(): void {\n    const newLanguage: Language = this.state.language === 'ja' ? 'en' : 'ja';\n    this.setState({ language: newLanguage });\n    this.applyLanguage(newLanguage);\n    storage.set('nexutha_language', newLanguage);\n    this.emit('app:languageChange', { language: newLanguage });\n  }\n\n  private applyLanguage(language: Language): void {\n    const langToggle = this.elements.langToggle;\n    if (langToggle) {\n      const langText = langToggle.querySelector('.lang-text');\n      if (langText) {\n        langText.textContent = language === 'ja' ? 'EN' : 'JA';\n      }\n    }\n\n    // Update all translatable elements\n    const translatableElements = document.querySelectorAll('[data-i18n]');\n    translatableElements.forEach(element => {\n      const key = (element as HTMLElementWithDataset).dataset.i18n;\n      if (key) {\n        const translation = this.getNestedTranslation(translations[language], key);\n        if (translation) {\n          element.textContent = translation;\n        }\n      }\n    });\n\n    // Update placeholder texts\n    const placeholderElements = document.querySelectorAll('[data-i18n-placeholder]');\n    placeholderElements.forEach(element => {\n      const key = (element as HTMLElementWithDataset).dataset.i18nPlaceholder;\n      if (key) {\n        const translation = this.getNestedTranslation(translations[language], key);\n        if (translation) {\n          (element as HTMLInputElement).placeholder = translation;\n        }\n      }\n    });\n\n    // Update document language\n    document.documentElement.lang = language;\n\n    // Update chatbot messages\n    if (this.state.chatbot.messages.length > 0) {\n      const updatedMessages = [...this.state.chatbot.messages];\n      updatedMessages[0] = {\n        ...updatedMessages[0],\n        content: translations[language].chatbot.welcome\n      };\n      \n      this.setState({\n        chatbot: {\n          ...this.state.chatbot,\n          messages: updatedMessages\n        }\n      });\n      \n      this.updateChatbotUI();\n    }\n  }\n\n  private getNestedTranslation(obj: any, key: string): string | undefined {\n    return key.split('.').reduce((o, k) => o && o[k], obj);\n  }\n\n  // Navigation Management\n  private toggleNavigation(): void {\n    const isOpen = !this.state.navigation.isMenuOpen;\n    this.setState({\n      navigation: {\n        ...this.state.navigation,\n        isMenuOpen: isOpen\n      }\n    });\n    this.updateNavigationUI();\n  }\n\n  private updateNavigationUI(): void {\n    const navMenu = this.elements.navMenu;\n    const navToggle = this.elements.navToggle;\n\n    if (navMenu) {\n      navMenu.classList.toggle('active', this.state.navigation.isMenuOpen);\n    }\n\n    if (navToggle) {\n      navToggle.classList.toggle('active', this.state.navigation.isMenuOpen);\n    }\n  }\n\n  private navigateToSection(sectionId: string): void {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      scrollToElement(element, 70);\n      this.setActiveSection(sectionId);\n      \n      // Close mobile menu if open\n      if (this.state.navigation.isMenuOpen) {\n        this.setState({\n          navigation: {\n            ...this.state.navigation,\n            isMenuOpen: false\n          }\n        });\n        this.updateNavigationUI();\n      }\n    }\n  }\n\n  private setActiveSection(sectionId: string): void {\n    if (this.state.navigation.activeSection === sectionId) return;\n\n    this.setState({\n      navigation: {\n        ...this.state.navigation,\n        activeSection: sectionId\n      }\n    });\n\n    // Update nav links\n    const navLinks = document.querySelectorAll('.nav-link');\n    navLinks.forEach(link => {\n      const href = link.getAttribute('href');\n      if (href === `#${sectionId}`) {\n        link.classList.add('active');\n      } else {\n        link.classList.remove('active');\n      }\n    });\n\n    this.emit('navigation:sectionChange', { section: sectionId });\n  }\n\n  // Chatbot Management\n  private toggleChatbot(): void {\n    const isOpen = !this.state.chatbot.isOpen;\n    this.setState({\n      chatbot: {\n        ...this.state.chatbot,\n        isOpen\n      }\n    });\n    this.updateChatbotUI();\n  }\n\n  private openChatbot(): void {\n    this.setState({\n      chatbot: {\n        ...this.state.chatbot,\n        isOpen: true\n      }\n    });\n    this.updateChatbotUI();\n  }\n\n  private closeChatbot(): void {\n    this.setState({\n      chatbot: {\n        ...this.state.chatbot,\n        isOpen: false\n      }\n    });\n    this.updateChatbotUI();\n  }\n\n  private updateChatbotUI(): void {\n    const chatbotWindow = this.elements.chatbotWindow;\n    if (chatbotWindow) {\n      chatbotWindow.classList.toggle('active', this.state.chatbot.isOpen);\n    }\n\n    // Update messages\n    this.renderChatbotMessages();\n\n    // Focus input when opened\n    if (this.state.chatbot.isOpen) {\n      setTimeout(() => {\n        const input = this.elements.chatbotInput as HTMLInputElement;\n        if (input) {\n          input.focus();\n        }\n      }, 300);\n    }\n  }\n\n  private renderChatbotMessages(): void {\n    const messagesContainer = this.elements.chatbotMessages;\n    if (!messagesContainer) return;\n\n    messagesContainer.innerHTML = '';\n\n    this.state.chatbot.messages.forEach(message => {\n      const messageElement = document.createElement('div');\n      messageElement.className = `message ${message.role}-message`;\n      \n      const messageContent = document.createElement('span');\n      messageContent.textContent = message.content;\n      \n      messageElement.appendChild(messageContent);\n      messagesContainer.appendChild(messageElement);\n    });\n\n    // Scroll to bottom\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n\n  private async sendMessage(): Promise<void> {\n    const input = this.elements.chatbotInput as HTMLInputElement;\n    if (!input || !input.value.trim()) return;\n\n    const userMessage: ChatMessage = {\n      id: generateId('msg_'),\n      content: input.value.trim(),\n      role: 'user',\n      timestamp: new Date()\n    };\n\n    // Add user message\n    this.setState({\n      chatbot: {\n        ...this.state.chatbot,\n        messages: [...this.state.chatbot.messages, userMessage],\n        isTyping: true\n      }\n    });\n\n    // Clear input\n    input.value = '';\n\n    this.updateChatbotUI();\n\n    try {\n      // Simulate AI response\n      const response = await this.generateAIResponse(userMessage.content);\n      \n      const aiMessage: ChatMessage = {\n        id: generateId('msg_'),\n        content: response,\n        role: 'assistant',\n        timestamp: new Date()\n      };\n\n      this.setState({\n        chatbot: {\n          ...this.state.chatbot,\n          messages: [...this.state.chatbot.messages, aiMessage],\n          isTyping: false,\n          conversationHistory: [...this.state.chatbot.conversationHistory, userMessage.content, response]\n        }\n      });\n\n    } catch (error) {\n      const errorMessage: ChatMessage = {\n        id: generateId('msg_'),\n        content: translations[this.state.language].chatbot.error,\n        role: 'assistant',\n        timestamp: new Date()\n      };\n\n      this.setState({\n        chatbot: {\n          ...this.state.chatbot,\n          messages: [...this.state.chatbot.messages, errorMessage],\n          isTyping: false\n        }\n      });\n\n      this.handleError(error as Error, 'Chatbot response failed');\n    }\n\n    this.updateChatbotUI();\n    this.emit('chatbot:messageReceived', { message: userMessage });\n  }\n\n  private async generateAIResponse(message: string): Promise<string> {\n    // Simulate network delay\n    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n\n    const lowerMessage = message.toLowerCase();\n\n    // Simple keyword-based responses\n    if (lowerMessage.includes('hello') || lowerMessage.includes('hi') || lowerMessage.includes('こんにちは')) {\n      return this.state.language === 'ja' \n        ? 'こんにちは！NEXUTHAのサービスについて何かご質問はありますか？'\n        : 'Hello! Do you have any questions about NEXUTHA\\'s services?';\n    }\n\n    if (lowerMessage.includes('service') || lowerMessage.includes('サービス')) {\n      return this.state.language === 'ja'\n        ? 'NEXUTHAは以下のサービスを提供しています：\\n• プロンプトエンジニアリング\\n• 音楽制作\\n• レーザーアート\\n• AI自動化システム\\n\\nどのサービスについて詳しく知りたいですか？'\n        : 'NEXUTHA offers the following services:\\n• Prompt Engineering\\n• Music Production\\n• Laser Art\\n• AI Automation Systems\\n\\nWhich service would you like to know more about?';\n    }\n\n    if (lowerMessage.includes('price') || lowerMessage.includes('cost') || lowerMessage.includes('料金') || lowerMessage.includes('価格')) {\n      return this.state.language === 'ja'\n        ? '料金はプロジェクトの規模と要件によって異なります。詳細なお見積もりをご希望でしたら、具体的なプロジェクト内容をお聞かせください。'\n        : 'Pricing varies depending on project scope and requirements. For a detailed quote, please tell us about your specific project needs.';\n    }\n\n    if (lowerMessage.includes('contact') || lowerMessage.includes('連絡') || lowerMessage.includes('問い合わせ')) {\n      return this.state.language === 'ja'\n        ? 'お問い合わせありがとうございます。プロジェクトの詳細を教えていただけますか？ご要望に合わせて最適なソリューションをご提案いたします。'\n        : 'Thank you for your interest! Could you tell us more about your project details? We\\'ll propose the best solution for your needs.';\n    }\n\n    // Default response\n    return this.state.language === 'ja'\n      ? 'ご質問ありがとうございます。NEXUTHAはAI、音楽、テクノロジーを融合させた革新的なサービスを提供しています。具体的にどのようなことをお手伝いできるでしょうか？'\n      : 'Thank you for your question! NEXUTHA provides innovative services that combine AI, music, and technology. How specifically can I help you today?';\n  }\n\n  // Public API\n  public getState(): Readonly<AppState> {\n    return this.state;\n  }\n\n  public getConfig(): Readonly<AppConfig> {\n    return CONFIG;\n  }\n\n  public destroy(): void {\n    // Clean up observers\n    this.observers.forEach(observer => observer.disconnect());\n    this.observers = [];\n\n    // Remove event listeners\n    this.removeAllListeners();\n\n    console.log('NEXUTHA App destroyed');\n  }\n}\n\n// Initialize application when DOM is ready\nlet app: NEXUTHAApp | null = null;\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', initializeApp);\n} else {\n  initializeApp();\n}\n\nfunction initializeApp(): void {\n  try {\n    app = new NEXUTHAApp();\n    \n    // Expose to global scope for debugging\n    if (window) {\n      (window as any).NEXUTHAApp = {\n        instance: app,\n        version: CONFIG.version,\n        config: CONFIG,\n        utils: { storage, throttle, debounce, generateId }\n      };\n    }\n  } catch (error) {\n    console.error('Failed to initialize NEXUTHA App:', error);\n    \n    // Show error message to user\n    const errorElement = document.createElement('div');\n    errorElement.style.cssText = `\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background: #ef4444;\n      color: white;\n      padding: 2rem;\n      border-radius: 8px;\n      text-align: center;\n      z-index: 9999;\n      font-family: system-ui, sans-serif;\n    `;\n    errorElement.innerHTML = `\n      <h2>Application Error</h2>\n      <p>Failed to initialize NEXUTHA. Please refresh the page.</p>\n      <button onclick=\"window.location.reload()\" style=\"margin-top: 1rem; padding: 0.5rem 1rem; background: white; color: #ef4444; border: none; border-radius: 4px; cursor: pointer;\">\n        Refresh Page\n      </button>\n    `;\n    document.body.appendChild(errorElement);\n  }\n}\n\n// Handle page unload\nwindow.addEventListener('beforeunload', () => {\n  if (app) {\n    app.destroy();\n  }\n});\n\nexport { NEXUTHAApp, CONFIG };\nexport type { AppState, AppConfig };"],"names":["translations","ja","nav","home","about","services","contact","hero","title","subtitle","cta","stats","projects","clients","support","description1","description2","features","ai","description","music","automation","prompt","laser","chatbot","welcome","placeholder","thinking","error","footer","privacy","terms","rights","en","CONFIG","version","environment","api","baseUrl","API_BASE_URL","timeout","analytics","serviceWorker","animations","prefersReducedMotion","performance","enableLazyLoading","enableImageOptimization","enableCodeSplitting","seo","enableStructuredData","enableMetaGeneration","enableSitemap","NEXUTHAApp","EventEmitter","constructor","super","this","state","language","getBrowserLanguage","theme","storage","get","navigation","activeSection","isMenuOpen","isOpen","messages","isTyping","conversationHistory","isLoading","visitorCount","elements","observers","statItems","init","mark","initializeElements","setupEventListeners","initializeFeatures","applyInitialState","setupIntersectionObservers","initializeAnalytics","setState","initDuration","measure","emit","duration","handleError","forEach","id","document","getElementById","Error","navToggle","addEventListener","toggleNavigation","themeToggle","toggleTheme","langToggle","toggleLanguage","querySelectorAll","link","e","preventDefault","target","getAttribute","substring","navigateToSection","ctaButton","openChatbot","chatbotToggle","toggleChatbot","chatbotClose","closeChatbot","chatbotSend","sendMessage","chatbotInput","key","throttledScrollHandler","throttle","handleScroll","bind","window","debouncedResizeHandler","debounce","handleResize","handleKeyDown","handleVisibilityChange","handleWindowError","handleUnhandledRejection","promises","push","initializeChatbot","navigator","initializeServiceWorker","initializeAnimations","Promise","all","applyTheme","applyLanguage","setTimeout","loadingScreen","classList","add","style","display","initializeStatsCounter","sectionObserver","createIntersectionObserver","entries","entry","isIntersecting","sectionId","setActiveSection","threshold","section","observe","animationObserver","unobserve","rootMargin","element","gtag","page_title","page_location","location","href","custom_map","custom_dimension_1","custom_dimension_2","device_type","getDeviceType","set","welcomeMessage","generateId","content","role","timestamp","Date","updateChatbotUI","register","initializeParticleBackground","initializeScrollAnimations","parseInt","dataset","count","statItem","current","increment","startStatsAnimation","item","animateCounter","heroBackground","canvas","createElement","ctx","getContext","position","top","left","width","height","pointerEvents","opacity","appendChild","particles","resizeCanvas","offsetWidth","offsetHeight","createParticle","x","Math","random","y","vx","vy","size","animate","clearRect","particle","beginPath","arc","PI","fillStyle","fill","i","slice","otherParticle","distance","sqrt","pow","moveTo","lineTo","strokeStyle","lineWidth","stroke","hidden","requestAnimationFrame","updateProgressBar","progressBar","progress","pageYOffset","documentElement","scrollTop","scrollHeight","innerHeight","min","background","heroStats","isInViewport","length","innerWidth","updateNavigationUI","event","message","filename","lineno","colno","reason","context","metadata","errorLogger","log","level","stack","userAgent","url","newState","newTheme","setAttribute","icon","querySelector","textContent","newLanguage","langText","i18n","translation","getNestedTranslation","i18nPlaceholder","lang","updatedMessages","obj","split","reduce","o","k","navMenu","toggle","scrollToElement","remove","chatbotWindow","renderChatbotMessages","input","focus","messagesContainer","chatbotMessages","innerHTML","messageElement","className","messageContent","value","trim","userMessage","response","generateAIResponse","aiMessage","errorMessage","resolve","lowerMessage","toLowerCase","includes","getState","getConfig","destroy","observer","disconnect","removeAllListeners","app","initializeApp","instance","config","utils","errorElement","cssText","body","readyState"],"mappings":"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"}