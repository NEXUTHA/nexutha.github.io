{"version":3,"file":"utils-legacy-BXMkungC.js","sources":["../../../src/ts/utils.ts"],"sourcesContent":["// NEXUTHA - Utility Functions\n\nimport type { \n  Language, \n  Theme, \n  ChatMessage, \n  ThrottledFunction, \n  DebouncedFunction, \n  PerformanceMetrics,\n  AnalyticsEvent,\n  ErrorLog\n} from './types';\n\n/**\n * Throttle function execution\n */\nexport function throttle<T extends (...args: any[]) => any>(\n  func: T, \n  limit: number\n): ThrottledFunction<T> {\n  let inThrottle: boolean;\n  \n  const throttledFunc = ((...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  }) as ThrottledFunction<T>;\n\n  throttledFunc.cancel = () => {\n    inThrottle = false;\n  };\n\n  return throttledFunc;\n}\n\n/**\n * Debounce function execution\n */\nexport function debounce<T extends (...args: any[]) => any>(\n  func: T, \n  delay: number\n): DebouncedFunction<T> {\n  let timeoutId: number | undefined;\n  let lastArgs: Parameters<T> | undefined;\n\n  const debouncedFunc = ((...args: Parameters<T>) => {\n    lastArgs = args;\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n    timeoutId = window.setTimeout(() => {\n      func.apply(this, args);\n      timeoutId = undefined;\n    }, delay);\n  }) as DebouncedFunction<T>;\n\n  debouncedFunc.cancel = () => {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n    }\n  };\n\n  debouncedFunc.flush = () => {\n    if (timeoutId !== undefined && lastArgs) {\n      debouncedFunc.cancel();\n      return func.apply(this, lastArgs);\n    }\n  };\n\n  return debouncedFunc;\n}\n\n/**\n * Generate unique ID\n */\nexport function generateId(prefix: string = ''): string {\n  const timestamp = Date.now().toString(36);\n  const randomStr = Math.random().toString(36).substring(2);\n  return `${prefix}${timestamp}${randomStr}`;\n}\n\n/**\n * Format date to readable string\n */\nexport function formatDate(date: Date, language: Language = 'ja'): string {\n  const options: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n\n  const locale = language === 'ja' ? 'ja-JP' : 'en-US';\n  return new Intl.DateTimeFormat(locale, options).format(date);\n}\n\n/**\n * Animate counting numbers\n */\nexport function animateCounter(\n  element: HTMLElement,\n  target: number,\n  duration: number = 2000,\n  callback?: () => void\n): void {\n  const start = 0;\n  const startTime = performance.now();\n\n  function updateCounter(currentTime: number) {\n    const elapsed = currentTime - startTime;\n    const progress = Math.min(elapsed / duration, 1);\n    \n    // Easing function (ease out)\n    const easeOut = 1 - Math.pow(1 - progress, 3);\n    const current = Math.round(start + (target - start) * easeOut);\n    \n    element.textContent = current.toLocaleString();\n\n    if (progress < 1) {\n      requestAnimationFrame(updateCounter);\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  requestAnimationFrame(updateCounter);\n}\n\n/**\n * Smooth scroll to element\n */\nexport function scrollToElement(\n  target: string | HTMLElement,\n  offset: number = 0,\n  behavior: ScrollBehavior = 'smooth'\n): void {\n  const element = typeof target === 'string' ? document.querySelector(target) : target;\n  \n  if (!element) return;\n\n  const targetPosition = element.getBoundingClientRect().top + window.pageYOffset - offset;\n  \n  window.scrollTo({\n    top: targetPosition,\n    behavior\n  });\n}\n\n/**\n * Check if element is in viewport\n */\nexport function isInViewport(element: HTMLElement, threshold: number = 0): boolean {\n  const rect = element.getBoundingClientRect();\n  const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n  \n  const vertInView = (rect.top <= windowHeight * (1 - threshold)) && \n                     ((rect.top + rect.height) >= windowHeight * threshold);\n  const horInView = (rect.left <= windowWidth * (1 - threshold)) && \n                    ((rect.left + rect.width) >= windowWidth * threshold);\n  \n  return vertInView && horInView;\n}\n\n/**\n * Local storage utilities with error handling\n */\nexport const storage = {\n  set<T>(key: string, value: T): void {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.warn('Failed to save to localStorage:', error);\n    }\n  },\n\n  get<T>(key: string, defaultValue?: T): T | undefined {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : defaultValue;\n    } catch (error) {\n      console.warn('Failed to read from localStorage:', error);\n      return defaultValue;\n    }\n  },\n\n  remove(key: string): void {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.warn('Failed to remove from localStorage:', error);\n    }\n  },\n\n  clear(): void {\n    try {\n      localStorage.clear();\n    } catch (error) {\n      console.warn('Failed to clear localStorage:', error);\n    }\n  }\n};\n\n/**\n * Validate email address\n */\nexport function isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\n/**\n * Sanitize HTML string\n */\nexport function sanitizeHTML(html: string): string {\n  const div = document.createElement('div');\n  div.textContent = html;\n  return div.innerHTML;\n}\n\n/**\n * Format file size\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n/**\n * Wait for specified duration\n */\nexport function wait(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Retry function with exponential backoff\n */\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  maxAttempts: number = 3,\n  baseDelay: number = 1000\n): Promise<T> {\n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      if (attempt === maxAttempts) {\n        throw error;\n      }\n      \n      const delay = baseDelay * Math.pow(2, attempt - 1);\n      await wait(delay);\n    }\n  }\n  \n  throw new Error('Retry failed');\n}\n\n/**\n * Create intersection observer with callback\n */\nexport function createIntersectionObserver(\n  callback: IntersectionObserverCallback,\n  options?: IntersectionObserverInit\n): IntersectionObserver {\n  const defaultOptions: IntersectionObserverInit = {\n    threshold: 0.1,\n    rootMargin: '0px',\n    ...options\n  };\n\n  return new IntersectionObserver(callback, defaultOptions);\n}\n\n/**\n * Preload image\n */\nexport function preloadImage(src: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n}\n\n/**\n * Get device type\n */\nexport function getDeviceType(): 'mobile' | 'tablet' | 'desktop' {\n  const userAgent = navigator.userAgent.toLowerCase();\n  const isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/.test(userAgent);\n  \n  if (isMobile) {\n    return window.innerWidth < 768 ? 'mobile' : 'tablet';\n  }\n  \n  return 'desktop';\n}\n\n/**\n * Check if user prefers reduced motion\n */\nexport function prefersReducedMotion(): boolean {\n  return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n}\n\n/**\n * Get browser language\n */\nexport function getBrowserLanguage(): Language {\n  const language = navigator.language.toLowerCase();\n  return language.startsWith('ja') ? 'ja' : 'en';\n}\n\n/**\n * Copy text to clipboard\n */\nexport async function copyToClipboard(text: string): Promise<boolean> {\n  try {\n    if (navigator.clipboard && window.isSecureContext) {\n      await navigator.clipboard.writeText(text);\n      return true;\n    } else {\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = text;\n      textArea.style.position = 'fixed';\n      textArea.style.left = '-999999px';\n      textArea.style.top = '-999999px';\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n      const result = document.execCommand('copy');\n      textArea.remove();\n      return result;\n    }\n  } catch (error) {\n    console.error('Failed to copy text:', error);\n    return false;\n  }\n}\n\n/**\n * Performance measurement utilities\n */\nexport const performance = {\n  mark(name: string): void {\n    if ('performance' in window && window.performance.mark) {\n      window.performance.mark(name);\n    }\n  },\n\n  measure(name: string, startMark: string, endMark?: string): number | undefined {\n    if ('performance' in window && window.performance.measure) {\n      try {\n        window.performance.measure(name, startMark, endMark);\n        const entries = window.performance.getEntriesByName(name);\n        return entries[entries.length - 1]?.duration;\n      } catch (error) {\n        console.warn('Performance measurement failed:', error);\n      }\n    }\n    return undefined;\n  },\n\n  getMetrics(): PerformanceMetrics | null {\n    if (!('performance' in window)) return null;\n\n    const navigation = window.performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n    const paint = window.performance.getEntriesByType('paint');\n    \n    const fcp = paint.find(entry => entry.name === 'first-contentful-paint');\n    const lcp = window.performance.getEntriesByType('largest-contentful-paint').pop();\n    \n    return {\n      loadTime: navigation?.loadEventEnd - navigation?.navigationStart || 0,\n      firstContentfulPaint: fcp?.startTime || 0,\n      largestContentfulPaint: (lcp as any)?.startTime || 0,\n      cumulativeLayoutShift: 0, // Would need to be measured separately\n      firstInputDelay: 0 // Would need to be measured separately\n    };\n  }\n};\n\n/**\n * Simple event emitter\n */\nexport class EventEmitter<T extends Record<string, any> = Record<string, any>> {\n  private listeners: Map<keyof T, Set<Function>> = new Map();\n\n  on<K extends keyof T>(event: K, callback: (data: T[K]) => void): void {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event)!.add(callback);\n  }\n\n  off<K extends keyof T>(event: K, callback: (data: T[K]) => void): void {\n    this.listeners.get(event)?.delete(callback);\n  }\n\n  emit<K extends keyof T>(event: K, data: T[K]): void {\n    this.listeners.get(event)?.forEach(callback => {\n      try {\n        callback(data);\n      } catch (error) {\n        console.error('Event listener error:', error);\n      }\n    });\n  }\n\n  removeAllListeners<K extends keyof T>(event?: K): void {\n    if (event) {\n      this.listeners.delete(event);\n    } else {\n      this.listeners.clear();\n    }\n  }\n}\n\n/**\n * Error logging utility\n */\nexport const errorLogger = {\n  log(error: ErrorLog): void {\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('[NEXUTHA Error]', error);\n    }\n\n    // Send to analytics in production\n    if (process.env.NODE_ENV === 'production') {\n      this.sendToAnalytics(error);\n    }\n\n    // Store locally for debugging\n    this.storeLocally(error);\n  },\n\n  sendToAnalytics(error: ErrorLog): void {\n    // Implementation would depend on analytics service\n    // Example for Google Analytics\n    if (typeof gtag !== 'undefined') {\n      gtag('event', 'exception', {\n        description: error.message,\n        fatal: error.level === 'error'\n      });\n    }\n  },\n\n  storeLocally(error: ErrorLog): void {\n    try {\n      const errors = storage.get<ErrorLog[]>('nexutha_errors', []);\n      errors.push(error);\n      \n      // Keep only last 100 errors\n      if (errors.length > 100) {\n        errors.splice(0, errors.length - 100);\n      }\n      \n      storage.set('nexutha_errors', errors);\n    } catch (e) {\n      console.warn('Failed to store error locally:', e);\n    }\n  }\n};\n\n/**\n * Feature detection utilities\n */\nexport const features = {\n  supportsWebP(): boolean {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0;\n  },\n\n  supportsIntersectionObserver(): boolean {\n    return 'IntersectionObserver' in window;\n  },\n\n  supportsServiceWorker(): boolean {\n    return 'serviceWorker' in navigator;\n  },\n\n  supportsWebGL(): boolean {\n    try {\n      const canvas = document.createElement('canvas');\n      return !!(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\n    } catch (error) {\n      return false;\n    }\n  },\n\n  supportsTouchEvents(): boolean {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n};"],"names":["navigator","language","toLowerCase","startsWith","userAgent","test","window","innerWidth","callback","options","defaultOptions","threshold","rootMargin","IntersectionObserver","func","delay","timeoutId","lastArgs","debouncedFunc","args","clearTimeout","setTimeout","apply","this","cancel","flush","element","target","duration","startTime","performance","now","requestAnimationFrame","updateCounter","currentTime","elapsed","progress","Math","min","easeOut","pow","current","round","textContent","toLocaleString","prefix","timestamp","Date","toString","randomStr","random","substring","offset","behavior","document","querySelector","targetPosition","getBoundingClientRect","top","pageYOffset","scrollTo","rect","windowHeight","innerHeight","documentElement","clientHeight","windowWidth","clientWidth","vertInView","height","horInView","left","width","matchMedia","matches","limit","inThrottle","throttledFunc","storage","exports","set","key","value","localStorage","setItem","JSON","stringify","error","get","defaultValue","item","getItem","parse","remove","removeItem","clear","mark","name","measure","startMark","endMark","entries","getEntriesByName","length","getMetrics","navigation","getEntriesByType","fcp","find","entry","lcp","pop","loadTime","loadEventEnd","navigationStart","firstContentfulPaint","largestContentfulPaint","cumulativeLayoutShift","firstInputDelay","constructor","listeners","Map","on","event","has","Set","add","off","delete","emit","data","forEach","removeAllListeners","log","sendToAnalytics","storeLocally","gtag","description","message","fatal","level","errors","push","splice","e"],"mappings":"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"}